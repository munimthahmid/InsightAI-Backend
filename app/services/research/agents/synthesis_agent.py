"""
Synthesis agent stub implementation.
"""

from typing import Dict, Any
import time
from loguru import logger

from app.services.research.agents.base_agent import BaseAgent
from app.services.research.orchestration.schemas import TaskSchema


class SynthesisAgent(BaseAgent):
    """Stub implementation of the synthesis agent."""

    def __init__(self, context_manager=None, task_queue=None, agent_id=None):
        super().__init__(
            agent_id=agent_id,
            agent_type="synthesis",
            context_manager=context_manager,
            task_queue=task_queue,
        )

        if task_queue:
            task_queue.register_handler("synthesis_task", self.execute_task)

        logger.info(f"SynthesisAgent (stub) initialized with ID: {self.agent_id}")

    async def execute_task(self, task: TaskSchema) -> Dict[str, Any]:
        """Stub implementation."""
        logger.warning("Using stub implementation of SynthesisAgent")

        query = task.params.get("query", "Unknown query")
        template_id = task.params.get("template_id")
        research_id = await self.get_context("research_id")
        sources = await self.get_context("sources") or []

        # Convert sources to dictionary if it's a list
        sources_dict = {}
        if isinstance(sources, list):
            for source in sources:
                sources_dict[source] = 1  # Default count
        elif isinstance(sources, dict):
            sources_dict = sources
        else:
            # Fallback if sources is neither list nor dict
            sources_dict = {"placeholder": 1}

        # Log activity
        await self.log_activity(
            "stub_synthesis",
            {
                "task_id": task.task_id,
                "query": query,
                "template_id": template_id,
            },
        )

        # Placeholder report
        report = f"""# Research Report: {query}

## Introduction

This is a placeholder report generated by the stub implementation of the synthesis agent.

## Key Findings

1. Placeholder finding one
2. Placeholder finding two
3. Placeholder finding three

## Conclusion

This is a placeholder conclusion. The full synthesis agent will be implemented in a future update.
"""

        # Return data in a format similar to what the final report should look like
        return {
            "success": True,
            "report": report,
            "research_id": research_id,
            "query": query,
            "timestamp": time.time(),
            "template_id": template_id,
            "sources": sources_dict,  # Ensure sources is a dictionary
            "sources_used": sources,  # Keep original sources list for internal use
            "sources_dict": sources_dict,  # Add sources dictionary
            "result_count": 1,
            "message": "Report generated using stub implementation",
        }
